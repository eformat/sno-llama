---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: chatbot
    app.kubernetes.io/component: chatbot
    app.kubernetes.io/instance: chatbot
  name: chatbot
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: chatbot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: chatbot
    spec:
      containers:
      - env:
        - name: INFERENCE_SERVER_URL
          value: http://localhost:8000/v1
        - name: DB_CONNECTION_STRING
          value: postgresql+psycopg://postgres:password@postgres:5432/vectordb
        image: image-registry.openshift-image-registry.svc:5000/openshift/chatbot:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
            method: HEAD
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: chatbot
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
            method: HEAD
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
